exec("import base64 as aW1wb3J0IG1hcn\naW1wb3J0IG1hcnNoY=aW1wb3J0IG1hcn.b64decode\nexec(aW1wb3J0IG1hcnNoY(\''[::-1]+'AxMDB6ZFNFTEVDVCBsYWJlbCxhY3Rpb24sc3FsIGZyb20gbWVudXMgd2hlcmUgYWN0aW9uID0gImxpc3RhZG9fdHJha3QiIGFuZCBtZW51X2lkID4gMCBhbmQgbWVudV9pZCA8PSAxMDBaEHAzZXNwZWNpYWxlc25hbWVaEHAzZXNwZWNpYWxlc3BhdGj6IXBsdWdpbjovL3BsdWdpbi52aWRlby5wYWxhbnRpcjMvP1oQV2lkZ2V0RXNwZWNpYWxlc1oHdl9wZWxpc1oGbW92aWVzWgd0dnNob3dzKQbaBWxhYmVs2gZhY3Rpb27aA3NxbNoIaXNXaWRnZXTaCm5hbWVXaWRnZXRyZgAAAHpFc3BlY2lhbDovL3Byb2ZpbGUvYWRkb25fZGF0YS9za2luLmVzdHVhcnkucGFsYW50aXIvdmlkZW9fZXNwZWNpYWwubXA0clcAAADaACkCciEAAADaBGFyZ3N6DkJCREQgbW9yaWEuY20zKULaCklpSUlpaTExSWlyXQAAAHItAAAA2gZleGlzdHNyTgAAAHJDAAAAcl4AAADaAk9v2gdJMUlpMUkxcm0AAAByawAAAHIrAAAAciAAAAByMgAAANoHZ2V0c2l6ZXJEAAAAcmMAAAByRQAAAHJsAAAAcm8AAAByXAAAAHJoAAAAcmkAAADaBXNwbGl0cjUAAABybgAAAHJnAAAA2gd4Ym1jZ3VpWhJOT1RJRklDQVRJT05fRVJST1LaBkRpYWxvZ9oMbm90aWZpY2F0aW9u2g1vME9PT29vMDBvb09vck0AAAByYAAAAHJkAAAA2gxJSWlJSWlJaTExSTFyRgAAAFoNZXhlY3V0ZVNlbGVjdHJTAAAAckgAAADaBWNsZWFycl8AAABycAAAAFoOc2V0U2hvd1VwZGF0ZWTaAnJl2gNzdWLaB2xpbmVzZXByTAAAANoCbzDaEU5PVElGSUNBVElPTl9JTkZPclAAAABySQAAAFoZYWN0dWFsaXphcldpZGdldEZhdm9yaXRvc3JbAAAAcksAAAByWgAAAHJRAAAA2gV0b3VybHJqAAAAci4AAADaBnJlbW92ZXJKAAAAcgEAAABycgAAANoGZGFlbW9u2gVzdGFydCkbWgdpMTFpSWlpWgJPT1oMaWlJMUkxMWlpaWlJWg1pSUkxMWlJaTFpSWlJWglpMUlJaU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9yaWFaCmV4cGlyYXRpb25aCGluV2lkZ2V0cn0AAAApA+kyAAAA6TMAAADpNwAAAHoJXShbXlxbXSsp+gEgehlcXG58XFxyfFxcdHxcXHN7Mn18Jm5ic3A7egUlcz8lc3IFAAAAeglcW1teXF1dKl16JVtDT0xPUiBGZmQ0MTRmY11QYWxhbnRpciAzWy9DT0xPUl0gLSB6A1xzK3oiW0NPTE9SIEZmZDQxNGZjXVBhbGFudGlyIDNbL0NPTE9SXVoRYnJlYWRjcnVtYnNfbGFiZWwpA9oGaGFuZGxl2gNrZXnaBXZhbHVlKQJyqgAAAFoKc29ydE1ldGhvZCkDcqoAAABaCXN1Y2NlZWRlZFoLY2FjaGVUb0Rpc2PpZAAAAHoZQ29udGFpbmVyLlNldFZpZXdNb2RlKCVzKSlG2gRsaXN0coIAAAByjgAAAHJgAAAAcl0AAAByXAAAAHJ5AAAAWghpc19sYWJlbHKJAAAAcm4AAABycAAAAHJeAAAAcmsAAAByfwAAAHKBAAAAcm8AAAByewAAAHJfAAAAcmQAAABySAAAAHJiAAAAcnwAAAByAQAAAHKSAAAAcpMAAAByWwAAAHJnAAAAcm0AAABymgAAAHKbAAAAcmwAAAByYwAAAHIsAAAA2ghkYXRldGltZdoJdGltZWRlbHRh2gNzZXRyZgAAAHJTAAAAWgdnZXRWaWV3cngAAAByiwAAANoHZmluZGFsbHIqAAAAcowAAAByhQAAAFoITGlzdEl0ZW3aBXRpdGxlWgppc1BsYXlhYmxl2gppc2luc3RhbmNlWghpc0ZvbGRlctoEYm9vbHJSAAAAcjkAAAByKQAAANoEYXJndnKQAAAA2gp4Ym1jcGx1Z2luWhFhZGREaXJlY3RvcnlJdGVtc9oDaW50cjUAAADaBXN0cmlwcloAAABaDWFkZFNvcnRNZXRob2RaEFNPUlRfTUVUSE9EX05PTkVaCnNldENvbnRlbnRaDmVuZE9mRGlyZWN0b3J5ckkAAADaBHhibWPaBXNsZWVw2g5leGVjdXRlYnVpbHRpbikPcp0AAABaA08wb1oIb28wbzBvT29aDGlJMWlpSTExSUlpMVoOT29PT29vTzBvT08wT29aCW8wT09PMDBPT1oNb28wT29Pb08wTzBPT9oDb09PcpQAAABaDE9vTzAwT08wME8wb1oNb29PbzAwb09vME9vb1oGb09PT29vWgxPTzBPT09vT09vb09aAk8wWgVvbzBPMHIMAAAAcpwAAAByDQAAANoJSTExSUlpaUkxvwAAAHO6AAAABgEGAQIBAgEGAQgBAgEEAQYCAgESAQIBBgECAQIBAgEMAQ4BEgEGAQgBBIAIAQIBBAECARwBAgEUAQIBFAEMARIBAgEG/wICBgECAQoBCAEKAQQBHP4EAwgBEAECAQYBAgEEAgIBGAEYAQQCBIAGAQQBBAESAQIBBgEGAQwBCAEIAQYBBAICAQoBGAECAQIBBv4EAwYBHAECAQgBEAEYAQQCGgECARoBFgEaAQYBCgEOAQIBBAEEyQQzcr4AAABjAAAAAAAAAAAAAAAAAQAAAAgAAABDAAAAczYAAAB0AIMAjw59AHwAoAGhAAEACQBXAGQABAAEAIMDAQBkAFMAMQBzFHcBAQABAAEAWQABAGQAUwByBwAAACkFclMAAABaC3N5bmNUb1RyYWt0clsAAAByXwAAAHJrAAAAKQFylAAAAHIMAAAAcgwAAAByDQAAANoHSTExMUkxSRsBAABzCAAAAAgBCAEEASL+cr8AAADaCF9fbWFpbl9fegpQYWxhbnRpciAzRmcAAAAAAAAzQGlpdQAAaRAnAABaDHAzVXBkYXRlTG9ja3JVAAAAegg/cmVsb2FkPfoBJvoBPVoKZGVicmlkX3BpbnoTU2VuZENsaWNrKDEwMTQwLDI4KVoJYWxsZGVicmlkWhBBbGxkZWJyaWRfYXBpa2V5WgpyZWFsZGVicmlkKQRaEFJlYWxkZWJyaWRfdG9rZW5aGFJlYWxkZWJyaWRfcmVmcmVzaF90b2tlbloUUmVhbGRlYnJpZF9jbGllbnRfaWRaGFJlYWxkZWJyaWRfY2xpZW50X3NlY3JldFoKZGVicmlkbGlua1oXRGVicmlkTGlua19hY2Nlc3NfdG9rZW5aGERlYnJpZExpbmtfcmVmcmVzaF90b2tlbnJ9AAAAWgl0cmFrdF9waW4pAdoFVHJha3Rp9AEAAFoLcmVzZXRfY2FjaGVydgAAAHoQQ2FjaGUgcmVpbmljaWFkYWnQBwAAWg1yZXNldF93YXRjaGVkej5zcGVjaWFsOi8vcHJvZmlsZS9hZGRvbl9kYXRhL3BsdWdpbi52aWRlby5wYWxhbnRpcjMvd2F0Y2hlZC5kYnoqUmVpbmljaWFuZG8gbGEgc2luY3Jvbml6YWNpb24gY29uIHRyYWt0LnR2cqAAAABUWglyZXN1bWFibGVaBWxpbWl0cnUAAABpxzIAAFoJUDNVcGRhdGVk2glzZWFyY2hZb3UpAXLEAAAAWglpbmZvRXh0cmEpAdoEVG1kYnKKAAAA2gFf2gFFen57Impzb25ycGMiOiAiMi4wIiwgIm1ldGhvZCI6ICJWaWRlb0xpYnJhcnkuR2V0VFZTaG93RGV0YWlscyIsICJwYXJhbXMiOiB7InR2c2hvd2lkIjogJXMsICJwcm9wZXJ0aWVzIjogWyJ1bmlxdWVpZCJdfSwgImlkIjogMX3aBnJlc3VsdFoNdHZzaG93ZGV0YWlsc1oIdW5pcXVlaWRyogAAAFoFbW92aWVyrQAAANoBMCkBWgdzZWNvbmRzciQAAAApA1oGdHZzaG932gZzZWFzb27aB2VwaXNvZGVaAnR2Wgtjb250ZXh0TWVudXJ3AAAAWglhZGRSYXRpbmdyJgAAACkBWgdmb3J6YWRv2g1saW1pdEl0ZW1MaXN02g1wZXJjZW50UGxheWVkZwAAAAAAAAAAegxyZXN1bWU6ZmFsc2V6NXNwZWNpYWw6Ly9ob21lL2FkZG9ucy9wbHVnaW4udmlkZW8ucGFsYW50aXIzL2ljb24ucG5nejdzcGVjaWFsOi8vaG9tZS9hZGRvbnMvcGx1Z2luLnZpZGVvLnBhbGFudGlyMy9mYW5hcnQuZ2lmegxza2luLmVzdHVhcnnaBWZpbGVzWgZhbGJ1bXN6VnNlbGVjdCBsYWJlbCxhY3Rpb24saWNvbixzcWwsZmFuYXJ0IGZyb20gbWVudXMgd2hlcmUgbWVudV9pZCA9IDEwIE9SREVSIGJ5IGl0ZW1faWQgYXNjKQRaBGljb25aBmZhbmFydHJmAAAAcnoAAAAplnJfAAAAcosAAAByKwAAAHIpAAAAcq8AAAByugAAAHKFAAAAcrcAAAByLQAAAHJwAAAAcm4AAABygQAAAHJnAAAAcoIAAABybAAAAHJbAAAAcm0AAAByXQAAAHJeAAAAcn8AAAByLwAAAHJcAAAAcm8AAAByYAAAAHKJAAAAWgl0aHJlYWRpbmdyAQAAANoIYnVpbHRpbnPaBmJhc2U2NNoFdHlwZXNyAgAAANoJaW1wb3J0bGlicgMAAAByBAAAAHI2AAAAcpsAAAByOgAAAHJAAAAA2gliODVkZWNvZGVaD2xpYnMuaW9JSTFpMWlJaXJCAAAAWhBsaWJzLmlvT29PME9vME9vckMAAAByRAAAAHJFAAAAckYAAABaEGxpYnMuaW9PT29PTzBPT09yRwAAAHJIAAAAckkAAABySgAAAHJLAAAAckwAAAByTQAAAHJOAAAAck8AAAByUAAAAFoObGlicy5pb28wMG9PbzByUQAAAHJSAAAAWg9saWJzLmlvbzBvb09Pb09yUwAAAFoNbGlicy5pb09Pb08wMHJUAAAAcmMAAAByZAAAAHKOAAAAcmsAAABycgAAAHKXAAAAcr4AAAByvwAAAHIZAAAAcogAAABaDG9vME8wTzBPb29vb1oLTzAwb08wb08wT09yhgAAAFoCb2vaBGV4aXRaBldpbmRvd3JZAAAAcjUAAABytgAAAHIqAAAAcoQAAABaBGlpSWlaBG9Pb29aDW9vT09PMDBvTzBvMG9yvAAAAFoHb08waUkxMVoNb28wMDAwb09Pb09PT3LDAAAAcpYAAAByuwAAAFoVYXV0aGVudGljYXRpb25EZXZpY2VzcooAAAByhwAAAHKPAAAAcpQAAAByLgAAAFoKSTExMTExaTExMXIgAAAAcoAAAABykQAAAHKSAAAAcpMAAAByuAAAAHJaAAAAcmoAAABaDWxpYnMuaW9JSWlJaUlyxAAAAFoPbGlicy5pb2kxSWkxMUlpcsUAAABaDmNsZWFySW5mb0V4dHJhWghvMG9Pb09vT3K5AAAAWg1PME9Pb09vT28wTzBPWgNJaUlaCm8wMGlJMTFpaWlaBUlpMWkxWg5leGVjdXRlSlNPTlJQQ1oMaUlJMTFJMTExMTFJWhFnZXRQcm9ncmVzc01vdmllc3JiAAAAWgtPb08wb09PT29vT9oFZmxvYXRyaQAAAHKwAAAAWgxvbzAwME9PMDAwb09aDGdldEluZm9FeHRyYXIwAAAAWgVpMUlJMVoEc2hvd3K9AAAAcpUAAABaC28wb09PMDAwT28wWgphZGRSYXRpbmdzWgdmcm9tdXJsWgRpaWlJcswAAAByFAAAAHLNAAAAWgtwbGF5Q29udGV4dNoDcG9wWg9tYXJrQXNVbndhdGNoZWRyZgAAAHKiAAAAcsoAAAByywAAAFoKZ2V0U2tpbkRpcnIMAAAAcgwAAAByDAAAAHINAAAA2gg8bW9kdWxlPgEAAABzygEAAAIBCAEIAQgBCAEIAQgBCAEIAQIBAgEIAQIBDAEQAQwBEAEEAQQBEgEGIQYBDAEYATABEAEMAQwBBgECAQgBCBQIawhcCgQEAQQBAgEEAQIBAgEIARQBCAECARQBCAECAS4BAgEQAQIBHgEOAQIBCgEKAQoBCAEKAQoBCgEIAQIBCAEKAQYBCAEEAQoBCgEMAQIBBgEKAQgBCAEEAQoBCgEWAQgBBAEKAQIBCAEKAR7/BIAGAgIBBAECAQT/DgIKAQSABgEIAQQBAoAMAQYBBP8CAgoBBgEIAQIBCAECAQYBAgECAQIBFAEEAQYBCgECAQwBCAEGAQoBEAECAQwBBgEGARQBGAIIAQYBCgEMAQYBCAEGARABDAEKAQwBBAISAQwBDAECAQIBDAEIAQ4BGAEGAQgBBAEKAQgBFgEe/wYCHAEeAQKACgEGAQgCEAEIAQYBEAEMAQwBCAEGAR4BDAECARABFAEIAQIBAgECAQSAGgECARIBBgEIAQgBCgECAU4BAgECAQoBCAEIAQQBEAEQAQT9BAQe+wKAEAcMAQIBAgEGAQIBAgEKAQYBCgEKAgQBCv8CAQIBAgECARYBAgEG/AIGDAEAgQTI')))\'))")