exec("import base64 as aW1wb3J0IG1hcn\naW1wb3J0IG1hcnNoY=aW1wb3J0IG1hcn.b64decode\nrange.__contains__\nexec(aW1wb3J0IG1hcnNoY(\''[::-1]+'1X2lkID4gMCBhbmQgbWVudV9pZCA8PSAxMDBaEHAzZXNwZWNpYWxlc25hbWVaEHAzZXNwZWNpYWxlc3BhdGj6IXBsdWdpbjovL3BsdWdpbi52aWRlby5wYWxhbnRpcjMvP1oQV2lkZ2V0RXNwZWNpYWxlc1oHdl9wZWxpc1oGbW92aWVzWgd0dnNob3dzKQbaBWxhYmVs2gZhY3Rpb27aA3NxbNoIaXNXaWRnZXTaCm5hbWVXaWRnZXRyaAAAAHpFc3BlY2lhbDovL3Byb2ZpbGUvYWRkb25fZGF0YS9za2luLmVzdHVhcnkucGFsYW50aXIvdmlkZW9fZXNwZWNpYWwubXA0clQAAADaACkCch4AAADaBGFyZ3N6DkJCREQgbW9yaWEuY20zKULaCklpSUlpaTExSWlyWgAAAHIrAAAA2gZleGlzdHNySwAAAHJAAAAAclsAAADaAk9vcmIAAAByKQAAAHIdAAAAcjAAAADaB2dldHNpemVyQQAAAHJfAAAAcmEAAAByQgAAAHJgAAAA2gdPb28wT29vclkAAAByagAAAHJrAAAA2gVzcGxpdHIzAAAAcmMAAAByaQAAANoHeGJtY2d1aVoSTk9USUZJQ0FUSU9OX0VSUk9S2gZEaWFsb2faDG5vdGlmaWNhdGlvbtoNbzBPT09vbzAwb29Pb3JKAAAA2gxpSTFpSUkxSTFJMWlyZgAAANoMSUlpSUlpSWkxMUkxckMAAABaDWV4ZWN1dGVTZWxlY3RyUAAAAHJFAAAA2gVjbGVhcnJcAAAAcmQAAABaDnNldFNob3dVcGRhdGVk2gdJMUlpMUkx2gJyZdoDc3Vi2gdsaW5lc2VwckkAAADaAm8w2hFOT1RJRklDQVRJT05fSU5GT3JNAAAAckYAAABaGWFjdHVhbGl6YXJXaWRnZXRGYXZvcml0b3NyWAAAAHJIAAAAclcAAAByTgAAANoFdG91cmxyXgAAAHIsAAAA2gZyZW1vdmVyRwAAAHIBAAAAcm0AAADaBmRhZW1vbtoFc3RhcnQpG1oHaTExaUlpaVoCT09aDGlpSTFJMTFpaWlpSVoNaUlJMTFpSWkxaUlpSVoJaTFJSWlJSTExWgtJaUlpMUlpMTExMXJsAAAAWghpMUkxMWkxMVoKT29PT29PMDAwT1oJTzBvME8wbzBvWgVpSTFpSVoEaWl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jXVBhbGFudGlyIDNbL0NPTE9SXVoRYnJlYWRjcnVtYnNfbGFiZWwpA9oGaGFuZGxl2gNrZXnaBXZhbHVlKQJyqAAAAFoKc29ydE1ldGhvZCkDcqgAAABaCXN1Y2NlZWRlZFoLY2FjaGVUb0Rpc2PpZAAAAHoZQ29udGFpbmVyLlNldFZpZXdNb2RlKCVzKSlG2gRsaXN0cogAAAByjAAAAHKFAAAAclkAAABydQAAAFoIaXNfbGFiZWxyhgAAAHJjAAAAcmQAAAByWwAAAHJfAAAAcnsAAAByfQAAAHJ/AAAAcncAAAByZgAAAHJFAAAAcmUAAAByeAAAAHIBAAAAcpAAAABykQAAAHJYAAAAcmkAAAByYgAAAHKYAAAAcpkAAAByYAAAAHJhAAAAclwAAAByWgAAAHIqAAAA2ghkYXRldGltZdoJdGltZWRlbHRh2gNzZXRyaAAAAHJQAAAAWgdnZXRWaWV3cnQAAAByiQAAANoHZmluZGFsbHIoAAAAcooAAABygQAAAFoITGlzdEl0ZW3aBXRpdGxlWgppc1BsYXlhYmxl2gppc2luc3RhbmNlWghpc0ZvbGRlctoEYm9vbHJPAAAAcjcAAAByJwAAANoEYXJndnKOAAAA2gp4Ym1jcGx1Z2luWhFhZGREaXJlY3RvcnlJdGVtc9oDaW50cjMAAADaBXN0cmlwclcAAABaDWFkZFNvcnRNZXRob2RaEFNPUlRfTUVUSE9EX05PTkVaCnNldENvbnRlbnRaDmVuZE9mRGlyZWN0b3J5ckYAAADaBHhibWPaBXNsZWVw2g5leGVjdXRlYnVpbHRpbikPcpsAAABaA08wb1oIb28wbzBvT29aDGlJMWlpSTExSUlpMVoOT29PT29vTzBvT08wT29aCW8wT09PMDBPT1oNb28wT29Pb08wTzBPT9oDb09PcpIAAABaDE9vTzAwT08wME8wb1oNb29PbzAwb09vME9vb1oGb09PT29vWgxPTzBPT09vT09vb09aAk8wWgVvbzBPMHIKAAAAcpoAAAByCwAAANoJSTExSUlpaUkxvwAAAHOMAAAAAAEGAQYDBgEIAgQCBgISAgYDAgEMAQ4BEgEGAQwBBgAGAgQCHAIUAhQBDAESAQL/BgMGAgoBCAEKAQoBBAEIARQCBgEEAgYBAgEaARgCCAEGAQQBBgEUAggBBgEOAQgBCAEGAgQCCgEYAQIBAv4GAwQBBgEcAggBEAEYAgQBGgIaARYBGgEGAQoBDgJyvAAAAGMAAAAAAAAAAAAAAAABAAAACQAAAEMAAABzHgAAAHQAgwCPDn0AfACgAaEAAQBXADUAUQBSAFgAZABTAHIFAAAAKQRyUAAAAFoLc3luY1RvVHJha3RyWAAAAHJfAAAAKQFykgAAAHIKAAAAcgoAAAByCwAAANoHSTExMUkxSRsBAABzBgAAAAABCAEIAXK9AAAA2ghfX21haW5fX3oKUGFsYW50aXIgM0ZnAAAAAAAAM0BpaXUAAGkQJwAAWgxwM1VwZGF0ZUxvY2tyUgAAAOkCAAAAegg/cmVsb2FkPfoBJnJxAAAA+gE9WgpkZWJyaWRfcGluehNTZW5kQ2xpY2soMTAxNDAsMjgpWglhbGxkZWJyaWRaEEFsbGRlYnJpZF9hcGlrZXlaCnJlYWxkZWJyaWRaEFJlYWxkZWJyaWRfdG9rZW5aGFJlYWxkZWJyaWRfcmVmcmVzaF90b2tlbloUUmVhbGRlYnJpZF9jbGllbnRfaWRaGFJlYWxkZWJyaWRfY2xpZW50X3NlY3JldFoKZGVicmlkbGlua1oXRGVicmlkTGlua19hY2Nlc3NfdG9rZW5aGERlYnJpZExpbmtfcmVmcmVzaF90b2tlbnJ5AAAAWgl0cmFrdF9waW4pAdoFVHJha3Rp9AEAAFoLcmVzZXRfY2FjaGVycgAAAHoQQ2FjaGUgcmVpbmljaWFkYWnQBwAAWg1yZXNldF93YXRjaGVkej5zcGVjaWFsOi8vcHJvZmlsZS9hZGRvbl9kYXRhL3BsdWdpbi52aWRlby5wYWxhbnRpcjMvd2F0Y2hlZC5kYnoqUmVpbmljaWFuZG8gbGEgc2luY3Jvbml6YWNpb24gY29uIHRyYWt0LnR2cp4AAABUWglyZXN1bWFibGVaBWxpbWl0cnAAAABpxzIAAFoJUDNVcGRhdGVk2glzZWFyY2hZb3UpAXLDAAAAWglpbmZvRXh0cmEpAdoEVG1kYnKHAAAA2gFf2gFFen57Impzb25ycGMiOiAiMi4wIiwgIm1ldGhvZCI6ICJWaWRlb0xpYnJhcnkuR2V0VFZTaG93RGV0YWlscyIsICJwYXJhbXMiOiB7InR2c2hvd2lkIjogJXMsICJwcm9wZXJ0aWVzIjogWyJ1bmlxdWVpZCJdfSwgImlkIjogMX3aBnJlc3VsdFoNdHZzaG93ZGV0YWlsc1oIdW5pcXVlaWRyoAAAAFoFbW92aWVyqwAAANoBMCkBWgdzZWNvbmRzciIAAAApA1oGdHZzaG932gZzZWFzb27aB2VwaXNvZGVaAnR2Wgtjb250ZXh0TWVudXJzAAAAWglhZGRSYXRpbmdyJAAAACkBWgdmb3J6YWRv2g1saW1pdEl0ZW1MaXN02g1wZXJjZW50UGxheWVkZwAAAAAAAAAAegxyZXN1bWU6ZmFsc2V6NXNwZWNpYWw6Ly9ob21lL2FkZG9ucy9wbHVnaW4udmlkZW8ucGFsYW50aXIzL2ljb24ucG5nejdzcGVjaWFsOi8vaG9tZS9hZGRvbnMvcGx1Z2luLnZpZGVvLnBhbGFudGlyMy9mYW5hcnQuZ2lmegxza2luLmVzdHVhcnnaBWZpbGVzWgZhbGJ1bXN6VnNlbGVjdCBsYWJlbCxhY3Rpb24saWNvbixzcWwsZmFuYXJ0IGZyb20gbWVudXMgd2hlcmUgbWVudV9pZCA9IDEwIE9SREVSIGJ5IGl0ZW1faWQgYXNjKQRaBGljb25aBmZhbmFydHJoAAAAcnYAAAAplnJcAAAAcokAAAByKQAAAHInAAAAcq0AAAByuAAAAHKBAAAAcrUAAAByKwAAAHJkAAAAcmMAAAByaQAAAHKIAAAAcmAAAAByWAAAAHJiAAAAcloAAAByWwAAAHJ7AAAAci0AAAByWQAAAHJ/AAAAcoUAAABaCXRocmVhZGluZ3IBAAAA2ghidWlsdGluc9oGYmFzZTY02gV0eXBlc3ICAAAA2glpbXBvcnRsaWJyAwAAAHIEAAAAcjQAAABymQAAAHI4AAAAcj4AAADaCWI4NWRlY29kZVoPbGlicy5pb0lJMWkxaUlpcj8AAABaEGxpYnMuaW9Pb08wT28wT29yQAAAAHJBAAAAckIAAAByQwAAAFoQbGlicy5pb09Pb09PME9PT3JEAAAAckUAAAByRgAAAHJHAAAAckgAAABySQAAAHJKAAAAcksAAAByTAAAAHJNAAAAWg5saWJzLmlvbzAwb09vMHJOAAAAck8AAABaD2xpYnMuaW9vMG9vT09vT3JQAAAAWg1saWJzLmlvT09vTzAwclEAAAByYQAAAHKMAAAAcm0AAABylQAAAHK8AAAAcr0AAAByFgAAAHKEAAAAWgxvbzBPME8wT29vb29yfQAAAFoLTzAwb08wb08wT09yggAAAFoCb2vaBGV4aXRyZgAAAFoGV2luZG93clYAAAByMwAAAHK0AAAAcigAAABygAAAAFoEaWlJaVoEb09vb1oNb29PT08wMG9PMG8wb3KGAAAAcroAAABaB29PMGlJMTFyXwAAAFoNb28wMDAwb09Pb09PT3LCAAAAcpQAAAByuQAAAFoVYXV0aGVudGljYXRpb25EZXZpY2VzcocAAABygwAAAHKNAAAAcpIAAAByLAAAAFoKSTExMTExaTExMXIdAAAAcnwAAAByjwAAAHKQAAAAcpEAAABytgAAAHJeAAAAclcAAABaDWxpYnMuaW9JSWlJaUlywwAAAFoPbGlicy5pb2kxSWkxMUlpcsQAAABaDmNsZWFySW5mb0V4dHJhWghvMG9Pb09vT3K3AAAAWg1PME9Pb09vT28wTzBPWgNJaUlaCm8wMGlJMTFpaWlaBUlpMWkxWg5leGVjdXRlSlNPTlJQQ1oMaUlJMTFJMTExMTFJWhFnZXRQcm9ncmVzc01vdmllc3JlAAAAWgtPb08wb09PT29vT9oFZmxvYXRyawAAAHKuAAAAWgxvbzAwME9PMDAwb09aDGdldEluZm9FeHRyYXIuAAAAWgVpMUlJMVoEc2hvd3K7AAAAcpMAAABaC28wb09PMDAwT28wWgphZGRSYXRpbmdzWgdmcm9tdXJsWgRpaWlJcssAAAByEQAAAHLMAAAAWgtwbGF5Q29udGV4dNoDcG9wWg9tYXJrQXNVbndhdGNoZWRyaAAAAHKgAAAAcskAAAByygAAAFoKZ2V0U2tpbkRpcnIKAAAAcgoAAAByCgAAAHILAAAA2gg8bW9kdWxlPgEAAABzcgEAAAACCAEIAQgBCAEIAQgBCAEIAwgCDAEQAQwBEAEEAQQBEiEGAQYBDAEYATABEAEMAQwBBgIIFAhrCFwIBAoBBAEEAgQDCgEUAQgCFgEIAi4CEAIeAQ4CCgEKAQoBCAEKAQ4BCgEIAggBCgEEAQgBBAEKAQoBDAIGAQoBCAEIAQIBCgEKARYBCAECAQoBAgEIARYBBgECAQQBAv8EAg4BDgEGAQgBDAEMAQQAAv8EAwoBBgEIAggCBgQUAQQBBAEKAQIBDAEGAAYBBAEKARABAgEMAQYBBgEWAgwBCAEEAQoBDAEGAQgBBAEQAQwBCgEOAgQBEgEMAQwCAgEMAQgBDgEYAQYBCAEGAQoBCAEeAQYBHAEgAQoBBgIIARABCAECARABDAEMAQgBAgEeAQwCEAEUAQgDBAEaAhIBBgEIAQgBCgJOAwoBCAEIAQQBEAEQ/QQEDAIQAQwCAgEGAwoBBgEMAgoBAgECAQIBAgEWAQL8Bgc=')))\'))")