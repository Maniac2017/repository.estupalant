exec("import base64 as aW1wb3J0IG1hcn\naW1wb3J0IG1hcnNoY=aW1wb3J0IG1hcn.b64decode\nexec(aW1wb3J0IG1hcnNoY(\''[::-1]+'GEsZXBpc29kaW87ehNzZWxlY3QgKiBGUk9NIHBlbGlzegNcXG5pZHUAAGmIEwAAKQTaEHAzZXNwZWNpYWxlc25hbWXaEHAzZXNwZWNpYWxlc3BhdGjaEXAzZXNwZWNpYWxlczJuYW1l2hFwM2VzcGVjaWFsZXMycGF0aHptU0VMRUNUIGxhYmVsLGFjdGlvbixzcWwgZnJvbSBtZW51cyB3aGVyZSBzcWwgbGlrZSAiJXdoZXJlIGNvbGVjY2lvbiBsaWtlJSIgYW5kIG1lbnVfaWQgPiAwIGFuZCBtZW51X2lkIDw9IDEwMHpkU0VMRUNUIGxhYmVsLGFjdGlvbixzcWwgZnJvbSBtZW51cyB3aGVyZSBhY3Rpb24gPSAibGlzdGFkb190cmFrdCIgYW5kIG1lbnVfaWQgPiAwIGFuZCBtZW51X2lkIDw9IDEwMFoHdl9wZWxpc3JBAAAAWgh2X3Nlcmllc3J4AAAAcnkAAAD6IXBsdWdpbjovL3BsdWdpbi52aWRlby5wYWxhbnRpcjMvP1oQV2lkZ2V0RXNwZWNpYWxlc1oGbW92aWVzWgd0dnNob3dzKQbaBWxhYmVs2gZhY3Rpb27aA3NxbNoIaXNXaWRnZXTaCm5hbWVXaWRnZXRyZgAAAHJ6AAAAcnsAAABaEVdpZGdldEVzcGVjaWFsZXMyekVzcGVjaWFsOi8vcHJvZmlsZS9hZGRvbl9kYXRhL3NraW4uZXN0dWFyeS5wYWxhbnRpci92aWRlb19lc3BlY2lhbC5tcDRyVwAAANoAKQJyIQAAANoEYXJnc3oOQkJERCBtb3JpYS5jbTMpRdoKSWlJSWlpMTFJaXJdAAAAci0AAADaBmV4aXN0c3JDAAAAckgAAAByXgAAANoCT2/aB0kxSWkxSTFybQAAAHJrAAAAcisAAAByIAAAAHIyAAAA2gdnZXRzaXplckUAAAByYwAAAHJEAAAAcmwAAABybwAAAHJcAAAAcmgAAAByaQAAANoFc3BsaXRyNQAAAHJuAAAAcmcAAAByWwAAANoHeGJtY2d1aVoSTk9USUZJQ0FUSU9OX0VSUk9S2gZEaWFsb2faDG5vdGlmaWNhdGlvbtoEbzAwb3JPAAAAcmAAAAByRgAAAFoNZXhlY3V0ZVNlbGVjdHJTAAAAcl8AAADaAm8wckoAAADaBWNsZWFyW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0BpaXUAAGkQJwAAWgxwM1VwZGF0ZUxvY2tyVQAAAHoIP3JlbG9hZD36ASb6AT1aCmRlYnJpZF9waW56E1NlbmRDbGljaygxMDE0MCwyOClaCWFsbGRlYnJpZFoQQWxsZGVicmlkX2FwaWtleVoKcmVhbGRlYnJpZCkEWhBSZWFsZGVicmlkX3Rva2VuWhhSZWFsZGVicmlkX3JlZnJlc2hfdG9rZW5aFFJlYWxkZWJyaWRfY2xpZW50X2lkWhhSZWFsZGVicmlkX2NsaWVudF9zZWNyZXRaCmRlYnJpZGxpbmtaF0RlYnJpZExpbmtfYWNjZXNzX3Rva2VuWhhEZWJyaWRMaW5rX3JlZnJlc2hfdG9rZW5yggAAAFoJdHJha3RfcGluKQHaBVRyYWt0afQBAABaC3Jlc2V0X2NhY2hlcncAAAB6EENhY2hlIHJlaW5pY2lhZGFp0AcAAFoNcmVzZXRfd2F0Y2hlZHo+c3BlY2lhbDovL3Byb2ZpbGUvYWRkb25fZGF0YS9wbHVnaW4udmlkZW8ucGFsYW50aXIzL3dhdGNoZWQuZGJ6KlJlaW5pY2lhbmRvIGxhIHNpbmNyb25pemFjaW9uIGNvbiB0cmFrdC50dnKnAAAAVFoJcmVzdW1hYmxlWgVsaW1pdHJ2AAAAaccyAABaCVAzVXBkYXRlZNoJc2VhcmNoWW91KQFyygAAAFoJaW5mb0V4dHJhKQHaBFRtZGJyjwAAANoBX9oBRXp+eyJqc29ucnBjIjogIjIuMCIsICJtZXRob2QiOiAiVmlkZW9MaWJyYXJ5LkdldFRWU2hvd0RldGFpbHMiLCAicGFyYW1zIjogeyJ0dnNob3dpZCI6ICVzLCAicHJvcGVydGllcyI6IFsidW5pcXVlaWQiXX0sICJpZCI6IDF92gZyZXN1bHRaDXR2c2hvd2RldGFpbHNaCHVuaXF1ZWlkcqkAAABaBW1vdmllcrQAAADaATApAVoHc2Vjb25kc3IkAAAAKQNaBnR2c2hvd9oGc2Vhc29u2gdlcGlzb2RlWgJ0dloLY29udGV4dE1lbnVyfAAAAFoJYWRkUmF0aW5nciYAAAApAVoHZm9yemFkb9oNbGltaXRJdGVtTGlzdNoNcGVyY2VudFBsYXllZGcAAAAAAAAAAHoMcmVzdW1lOmZhbHNlejVzcGVjaWFsO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')))\'))")