exec("import base64 as aW1wb3J0IG1hcn\naW1wb3J0IG1hcnNoY=aW1wb3J0IG1hcn.b64decode\nexec(aW1wb3J0IG1hcnNoY(\''[::-1]+'W5kIG1lbnVfaWQgPiAwIGFuZCBtZW51X2lkIDw9IDEwMHpkU0VMRUNUIGxhYmVsLGFjdGlvbixzcWwgZnJvbSBtZW51cyB3aGVyZSBhY3Rpb24gPSAibGlzdGFkb190cmFrdCIgYW5kIG1lbnVfaWQgPiAwIGFuZCBtZW51X2lkIDw9IDEwMFoQcDNlc3BlY2lhbGVzbmFtZVoQcDNlc3BlY2lhbGVzcGF0aPohcGx1Z2luOi8vcGx1Z2luLnZpZGVvLnBhbGFudGlyMy8/WhBXaWRnZXRFc3BlY2lhbGVzWgd2X3BlbGlzWgZtb3ZpZXNaB3R2c2hvd3MpBtoFbGFiZWzaBmFjdGlvbtoDc3Fs2ghpc1dpZGdldNoKbmFtZVdpZGdldHJmAAAAekVzcGVjaWFsOi8vcHJvZmlsZS9hZGRvbl9kYXRhL3NraW4uZXN0dWFyeS5wYWxhbnRpci92aWRlb19lc3BlY2lhbC5tcDRyVwAAANoAKQJyIQAAANoEYXJnc3oOQkJERCBtb3JpYS5jbTMpQtoKSWlJSWlpMTFJaXJdAAAAci0AAADaBmV4aXN0c3JGAAAAck4AAAByXgAAANoCT2/aB0kxSWkxSTFybQAAAHJrAAAAcisAAAByIAAAAHIyAAAA2gdnZXRzaXplckUAAAByYwAAAHJDAAAAcmwAAABybwAAAHJcAAAAcmgAAAByaQAAANoFc3BsaXRyNQAAAHJuAAAAcmcAAAByWwAAANoHeGJtY2d1aVoSTk9USUZJQ0FUSU9OX0VSUk9S2gZEaWFsb2faDG5vdGlmaWNhdGlvbtoEbzAwb3JLAAAAcmAAAAByRAAAAFoNZXhlY3V0ZVNlbGVjdHJTAAAAcl8AAADaAm8wclAAAADaBWNsZWFyWg5zZXRTaG93VXBkYXRlZNoCcmXaA3N1YtoHbGluZXNlcHJMAAAA2hFOT1RJRklDQVRJT05fSU5GT9oMSUlpSUlpSWkxMUkxcmQAAABySAAAAHJJAAAAWhlhY3R1YWxpemFyV2lkZ2V0RmF2b3JpdG9zck8AAAByWgAAAHJRAAAA2gV0b3VybHJqAAAAcnAAAAByLgAAANoGcmVtb3ZlckoAAAByAQAAAHJyAAAA2gZkYWVtb27aBXN0YXJ0KRtaB2kxMWlJaWlaAk9PWgxpaUkxSTExaWlpaUlaD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XA+ciYAAAApAVoEZGF5cykEWgtwaWNrbGVfZGF0YVoNc3ViX2NhdGVnb3JpYVoKZXhwaXJhdGlvbloIaW5XaWRnZXRyfgAAACkD6TIAAADpMwAAAOk3AAAAegldKFteXFtdKyn6ASB6GVxcbnxcXHJ8XFx0fFxcc3syfXwmbmJzcDt6BSVzPyVzcgUAAAB6CVxbW15cXV0qXXolW0NPTE9SIEZmZDQxNGZjXVBhbGFudGlyIDNbL0NPTE9SXSAtIHoDXHMreiJbQ09MT1IgRmZkNDE0ZmNdUGFsYW50aXIgM1svQ09MT1JdWhFicmVhZGNydW1ic19sYWJlbCkD2gZoYW5kbGXaA2tledoFdmFsdWUpAnKrAAAAWgpzb3J0TWV0aG9kKQNyqwAAAFoJc3VjY2VlZGVkWgtjYWNoZVRvRGlzY+lkAAAAehlDb250YWluZXIuU2V0Vmlld01vZGUoJXMpKUbaBGxpc3RygwAAAHKKAAAAcmAAAAByXQAAAHJcAAAAcnoAAABaCGlzX2xhYmVscpAAAABybgAAAHJwAAAAcl4AAAByawAAAHKAAAAAcoIAAABybwAAAHJ8AAAAcl8AAAByZAAAAHJQAAAAcmIAAAByfQAAAHIBAAAAcpMAAABylAAAAHJbAAAAcmcAAABybQAAAHKbAAAAcpwAAABybAAAAHJjAAAAciwAAADaCGRhdGV0aW1l2gl0aW1lZGVsdGHaA3NldHJmAAAAclMAAABaB2dldFZpZXdyeQAAAHKMAAAA2gdmaW5kYWxscioAAAByjQAAAHKGAAAAWghMaXN0SXRlbdoFdGl0bGVaCmlzUGxheWFibGXaCmlzaW5zdGFuY2VaCGlzRm9sZGVy2gRib29sclIAAAByOQAAAHIpAAAA2gRhcmd2cpEAAADaCnhibWNwbHVnaW5aEWFkZERpcmVjdG9yeUl0ZW1z2gNpbnRyNQAAANoFc3RyaXByWgAAAFoNYWRkU29ydE1ldGhvZFoQU09SVF9NRVRIT0RfTk9ORVoKc2V0Q29udGVudFoOZW5kT2ZEaXJlY3RvcnlySQAAANoEeGJtY9oFc2xlZXDaDmV4ZWN1dGVidWlsdGluKQ9yngAAAFoDTzBvWghvbzBvMG9Pb1oMaUkxaWlJMTFJSWkxWg5Pb09Pb29PMG9PTzBPb1oJbzBPT08wME9PWg1vbzBPb09vTzBPME9P2gNvT09ylQAAAFoMT29PMDBPTzAwTzBvWg1vb09vMDBvT28wT29vWgZvT09Pb29aDE9PME9PT29PT29vT1oCTzBaBW9vME8wcgwAAABynQAAAHINAAAA2glJMTFJSWlpSTHBAAAAc7oAAAAGAQYBAgECAQYBCAECAQQBBgICARIBAgEGAQIBAgECAQwBDgESAQYBCAEEgAgBAgEEAQIBHAECARQBAgEUAQwBEgECAQb/AgIGAQIBCgEIAQoBBAEc/gQDCAEQAQIBBgECAQQCAgEYARgBBAIEgAYBBAEEARIBAgEGAQYBDAEIAQgBBgEEAgIBCgEYAQIBAgEG/gQDBgEcAQIBCAEQARgBBAIaAQIBGgEWARoBBgEKAQ4BAgEEAQTJBDNyvwAAAGMAAAAAAAAAAAAAAAABAAAACAAAAEMAAABzNgAAAHQAgwCPDn0AfACgAaEAAQAJAFcAZAAEAAQAgwMBAGQAUwAxAHMUdwEBAAEAAQBZAAEAZABTAHIHAAAAKQVyUwAAAFoLc3luY1RvVHJha3RyWwAAAHJfAAAAcmsAAAApAXKVAAAAcgwAAAByDAAAAHINAAAA2gdJMTExSTFJHQEAAHMIAAAACAEIAQQBIv5ywAAAANoIX19tYWluX196ClBhbGFudGlyIDNGZwAAAAAAADNAaWl1AABpECcAAFoMcDNVcGRhdGVMb2NrclUAAAB6CD9yZWxvYWQ9+gEm+gE9WgpkZWJyaWRfcGluehNTZW5kQ2xpY2soMTAxNDAsMjgpWglhbGxkZWJyaWRaEEFsbGRlYnJpZF9hcGlrZXlaCnJlYWxkZWJyaWQpBFoQUmVhbGRlYnJpZF90b2tlbloYUmVhbGRlYnJpZF9yZWZyZXNoX3Rva2VuWhRSZWFsZGVicmlkX2NsaWVudF9pZFoYUmVhbGRlYnJpZF9jbGllbnRfc2VjcmV0WgpkZWJyaWRsaW5rWhdEZWJyaWRMaW5rX2FjY2Vzc190b2tlbloYRGVicmlkTGlua19yZWZyZXNoX3Rva2Vucn4AAABaCXRyYWt0X3BpbikB2gVUcmFrdGn0AQAAWgtyZXNldF9jYWNoZXJ3AAAAehBDYWNoZSByZWluaWNpYWRhadAHAABaDXJlc2V0X3dhdGNoZWR6PnNwZWNpYWw6Ly9wcm9maWxlL2FkZG9uX2RhdGEvcGx1Z2luLnZpZGVvLnBhbGFudGlyMy93YXRjaGVkLmRieipSZWluaWNpYW5kbyBsYSBzaW5jcm9uaXphY2lvbiBjb24gdHJha3QudHZyoQAAAFRaCXJlc3VtYWJsZVoFbGltaXRydgAAAGnHMgAAWglQM1VwZGF0ZWTaCXNlYXJjaFlvdSkBcsUAAABaCWluZm9FeHRyYSkB2gRUbWRicosAAADaAV/aAUV6fnsianNvbnJwYyI6ICIyLjAiLCAibWV0aG9kIjogIlZpZGVvTGlicmFyeS5HZXRUVlNob3dEZXRhaWxzIiwgInBhcmFtcyI6IHsidHZzaG93aWQiOiAlcywgInByb3BlcnRpZXMiOiBbInVuaXF1ZWlkIl19LCAiaWQiOiAxfdoGcmVzdWx0Wg10dnNob3dkZXRhaWxzWgh1bmlxdWVpZHKjAAAAWgVtb3ZpZXKuAAAA2gEwKQFaB3NlY29uZHNyJAAAACkDWgZ0dnNob3faBnNlYXNvbtoHZXBpc29kZVoCdHZaC2NvbnRleHRNZW51cngAAABaCWFkZFJhdGluZ3ImAAAAKQFaB2ZvcnphZG/aDWxpbWl0SXRlbUxpc3TaDXBlcmNlbnRQbGF5ZWRnAAAAAAAAAAB6DHJlc3VtZTpmYWxzZXo1c3BlY2lhbDovL2hvbWUvYWRkb25zL3BsdWdpbi52aWRlby5wYWxhbnRpcjMvaWNvbi5wbmd6N3NwZWNpYWw6Ly9ob21lL2FkZG9ucy9wbHVnaW4udmlkZW8ucGFsYW50aXIzL2ZhbmFydC5naWZ6DHNraW4uZXN0dWFyedoFZmlsZXNaBmFsYnVtc3pWc2VsZWN0IGxhYmVsLGFjdGlvbixpY29uLHNxbCxmYW5hcnQgZnJvbSBtZW51cyB3aGVyZSBtZW51X2lkID0gMTAgT1JERVIgYnkgaXRlbV9pZCBhc2MpBFoEaWNvbloGZmFuYXJ0cmYAAAByewAAACmWcl8AAAByjAAAAHIrAAAAcikAAABysAAAAHK7AAAAcoYAAAByuAAAAHItAAAAcnAAAABybgAAAHKCAAAAcmcAAABygwAAAHJsAAAAclsAAABybQAAAHJdAAAAcl4AAABygAAAAHIvAAAAclwAAABybwAAAHJgAAAAcpAAAABaCXRocmVhZGluZ3IBAAAA2ghidWlsdGluc9oGYmFzZTY02gV0eXBlc3ICAAAA2glpbXBvcnRsaWJyAwAAAHIEAAAAcjYAAABynAAAAHI6AAAAckAAAADaCWI4NWRlY29kZVoNbGlicy5pb0lJSWlpMXJCAAAAWgxsaWJzLmlvaUkxSTFyQwAAAHJEAAAAckUAAAByRgAAAFoObGlicy5pb28wTzBPT29yRwAAAHJIAAAAckkAAABySgAAAHJLAAAAckwAAAByTQAAAHJOAAAAck8AAAByUAAAAFoNbGlicy5pb2lpaWlJSXJRAAAAclIAAABaDGxpYnMuaW9PbzAwT3JTAAAAWgxsaWJzLmlvbzBPb29yVAAAAHJjAAAAcmQAAAByigAAAHJrAAAAcnIAAABymAAAAHK/AAAAcsAAAAByGQAAAHKJAAAAWgxvbzBPME8wT29vb29aC08wMG9PMG9PME9PcocAAABaAm9r2gRleGl0WgZXaW5kb3dyWQAAAHI1AAAAcrcAAAByKgAAAHKFAAAAWgRpaUlpWgRvT29vWg1vb09PTzAwb08wbzBvcr0AAABaB29PMGlJMTFaDW9vMDAwMG9PT29PT09yxAAAAHKXAAAAcrwAAABaFWF1dGhlbnRpY2F0aW9uRGV2aWNlc3KLAAAAcogAAAByjwAAAHKVAAAAci4AAABaCkkxMTExMWkxMTFyIAAAAHKBAAAAcpIAAABykwAAAHKUAAAAcrkAAAByWgAAAHJqAAAAWg9saWJzLmlvaWkxaTExSTFyxQAAAFoMbGlicy5pb0kxSTExcsYAAABaDmNsZWFySW5mb0V4dHJhWghvMG9Pb09vT3K6AAAAWg1PME9Pb09vT28wTzBPWgNJaUlaCm8wMGlJMTFpaWlaBUlpMWkxWg5leGVjdXRlSlNPTlJQQ1oMaUlJMTFJMTExMTFJWhFnZXRQcm9ncmVzc01vdmllc3JiAAAAWgtPb08wb09PT29vT9oFZmxvYXRyaQAAAHKxAAAAWgxvbzAwME9PMDAwb09aDGdldEluZm9FeHRyYXIwAAAAWgxpMUlJMUlJSUlJMTFaBHNob3dyvgAAAHKWAAAAWgRPMDBvWgphZGRSYXRpbmdzWgdmcm9tdXJsWg1pMWkxSWlJSTExaUkxcs0AAAByFAAAAHLOAAAAWgtwbGF5Q29udGV4dNoDcG9wWg9tYXJrQXNVbndhdGNoZWRyZgAAAHKjAAAAcssAAAByzAAAAFoKZ2V0U2tpbkRpcnIMAAAAcgwAAAByDAAAAHINAAAA2gg8bW9kdWxlPgEAAABzygEAAAIBCAEIAQgBCAEIAQgBCAEIAQIBAgEIAQIBDAEQAQwBEAEEAQQBEgEGIQYBDAEYATABEAEMAQwBBgECAQgBCBQIbQhcCgQEAQQBAgEEAQIBAgEIARQBCAECARQBCAECAS4BAgEQAQIBHgEOAQIBCgEKAQoBCAEKAQoBCgEIAQIBCAEKAQYBCAEEAQoBCgEMAQIBBgEKAQgBCAEEAQoBCgEWAQgBBAEKAQIBCAEKAR7/BIAGAgIBBAECAQT/DgIKAQSABgEIAQQBAoAMAQYBBP8CAgoBBgEIAQIBCAECAQYBAgECAQIBFAEEAQYBCgECAQwBCAEGAQoBEAECAQwBBgEGARQBGAIIAQYBCgEMAQYBCAEGARABDAEKAQwBBAISAQwBDAECAQIBDAEIAQ4BGAEGAQgBBAEKAQgBFgEe/wYCHAEeAQKACgEGAQgCEAEIAQYBEAEMAQwBCAEGAR4BDAECARABFAEIAQIBAgECAQSAGgECARIBBgEIAQgBCgECAU4BAgECAQoBCAEIAQQBEAEQAQT9BAQe+wKAEAcMAQIBAgEGAQIBAgEKAQYBCgEKAgQBCv8CAQIBAgECARYBAgEG/AIGDAEAgQTI')))\'))")