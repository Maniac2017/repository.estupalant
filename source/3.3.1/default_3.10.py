exec("import base64 as aW1wb3J0IG1hcn\naW1wb3J0IG1hcnNoY=aW1wb3J0IG1hcn.b64decode\nexec(aW1wb3J0IG1hcnNoY(\''[::-1]+'WN0aW9uID0gImxpc3RhZG9fdHJha3QiIGFuZCBtZW51X2lkID4gMCBhbmQgbWVudV9pZCA8PSAxMDBaEHAzZXNwZWNpYWxlc25hbWVaEHAzZXNwZWNpYWxlc3BhdGj6IXBsdWdpbjovL3BsdWdpbi52aWRlby5wYWxhbnRpcjMvP1oQV2lkZ2V0RXNwZWNpYWxlc1oHdl9wZWxpc1oGbW92aWVzWgd0dnNob3dzKQbaBWxhYmVs2gZhY3Rpb27aA3NxbNoIaXNXaWRnZXTaCm5hbWVXaWRnZXRyXgAAAHoOQkJERCBtb3JpYS5jbTMpQ9oKSWlJSWlpMTFJadoCaTFyZAAAAHItAAAA2gZleGlzdHNyTQAAAHJEAAAA2gdJMUlpMUkx2gJJadoDSTFJcisAAAByIAAAAHIyAAAA2gdnZXRzaXplckMAAAByWgAAAHJGAAAA2gppMWlpSUlJMTExcmUAAAByWwAAANoJT09PMDAwMDBPcmAAAAByYQAAANoFc3BsaXRyNQAAAHJjAAAAcl8AAADaB09vbzBPb2/aB3hibWNndWlaEk5PVElGSUNBVElPTl9FUlJPUtoGRGlhbG9n2gxub3RpZmljYXRpb27aCkkxMTFJaWkxSWlyUAAAAHJiAAAAclwAAADaBm9vbzAwMHJFAAAAclMAAABySQAAANoFY2xlYXJaDnNldFNob3dVcGRhdGVk2gppMWkxaTExMTFJWg1leGVjdXRlU2VsZWN0ckoAAAByLAAAAHIuAAAA2gZyZW1vdmVySwAAAHIBAAAAcmcAAADaBmRhZW1vbtoFc3RhcnTaBk9vb09vb9oCcmXaA3N1YtoHbGluZXNlcHJMAAAA2hFOT1RJRklDQVRJT05fSU5GT9oMSUlpSUlpSWkxMUkxckcAAABaGWFjdHVhbGl6YXJXaWRnZXRGYXZvcml0b3NyTgAAANoLc2V0UHJvcGVydHlyUQAAANoFdG91cmzaDWNsZWFyUHJvcGVydHkpG1oGT29vME9PWgdpaTFJaTFJWgNvbzBaB2kxMWlJaWlaC08wb29vb09vbzBPWgZPb09PMDByZgAAAFoLSWlJaTFJaTExMTFaCElpMUkxSTFpWgxPT09PME8wb29PME9aCU9PMG8wTzBvMFoMSTExMUlJMTExSTFJ2glJSWkxSTFJMWlaB08wT09vb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3syfXwmbmJzcDt6BSVzPyVzcgUAAAB6CVxbW15cXV0qXXolW0NPTE9SIEZmZDQxNGZjXVBhbGFudGlyIDNbL0NPTE9SXSAtIHoDXHMreiJbQ09MT1IgRmZkNDE0ZmNdUGFsYW50aXIgM1svQ09MT1JdWhFicmVhZGNydW1ic19sYWJlbCkD2gZoYW5kbGXaA2tledoFdmFsdWUpAnKoAAAAWgpzb3J0TWV0aG9kKQNyqAAAAFoJc3VjY2VlZGVkWgtjYWNoZVRvRGlzY+lkAAAAehlDb250YWluZXIuU2V0Vmlld01vZGUoJXMpKUXaBGxpc3RyWwAAAHJjAAAAcnUAAAByYgAAAHJlAAAAcnAAAABaCGlzX2xhYmVscnkAAAByZAAAAHKJAAAAcngAAAByjgAAAHKFAAAAcnsAAABycgAAAHJcAAAAckkAAAByWQAAAHJzAAAAcgEAAAByhwAAAHKIAAAAcoMAAAByWgAAAHJfAAAAcn4AAABymAAAAHKZAAAAciwAAADaCGRhdGV0aW1l2gl0aW1lZGVsdGHaA3NldHJeAAAAclMAAABaB2dldFZpZXdybwAAAHJ3AAAAcooAAADaB2ZpbmRhbGxyKgAAAHKLAAAAcn8AAABaCExpc3RJdGVt2gV0aXRsZVoKaXNQbGF5YWJsZdoKaXNpbnN0YW5jZVoIaXNGb2xkZXLaBGJvb2xyUgAAAHI5AAAAcikAAADaBGFyZ3ZykAAAANoKeGJtY3BsdWdpbloRYWRkRGlyZWN0b3J5SXRlbXPaA2ludHI1AAAA2gVzdHJpcHKPAAAAWg1hZGRTb3J0TWV0aG9kWhBTT1JUX01FVEhPRF9OT05FWgpzZXRDb250ZW50Wg5lbmRPZkRpcmVjdG9yeXJKAAAA2gR4Ym1j2gVzbGVlcNoOZXhlY3V0ZWJ1aWx0aW5yfAAAACkPcpsAAABaBk8wMG8wMFoMaWlJMWlpaWkxaWlpWgtJMTFJSWlJMUkxSVoMSUlpSUlJSUkxaWlJWgpJaTFJaWlpSWkxWg1JSTExSUlJSWlJMWlJ2gdPbzBvME9vcpIAAABaB28wTzBPTzBaCW9vME9vMG9PMFoJaUlJMTFJMWlJWgdJSUlpaTFJWgxJSUlJMWlJSTExaWlaBklpMUlpMXIMAAAAcpoAAAByDQAAANoKaUkxMTFpMUlJSbwAAABzugAAAAYBBgECAQIBBgEIAQIBBAEGAgIBEgECAQYBAgECAQIBDAEOARIBBgEIAQSACAECAQQBAgEcAQIBFAECARQBDAESAQIBBv8CAgYBAgEKAQgBCgEEARz+BAMIARABAgEGAQIBBAICARgBGAEEAgSABgEEAQQBEgECAQYBBgEMAQgBCAEGAQQCAgEKARgBAgECAQb+BAMGARwBAgEIARABGAEEAhoBAgEaARYBGgEGAQoBDgECAQQBBMkEM3K8AAAAYwAAAAAAAAAAAAAAAAEAAAAIAAAAQwAAAHM2AAAAdACDAI8OfQB8AKABoQABAAkAVwBkAAQABACDAwEAZABTADEAcxR3AQEAAQABAFkAAQBkAFMAcgcAAAApA3JTAAAAWgtzeW5jVG9UcmFrdHKJAAAAKQFykgAAAHIMAAAAcgwAAAByDQAAANoGb09PME9vGAEAAHMIAAAACAEIAQQBIv5yvQAAANoIX19tYWluX196ClBhbGFudGlyIDNGZwAAAAAAADNAaWl1AABpECcAAFoMcDNVcGRhdGVMb2Nr2gR0cnVlegg/cmVsb2FkPfoBJvoBPVoKZGVicmlkX3BpbnoTU2VuZENsaWNrKDEwMTQwLDI4KVoJYWxsZGVicmlkWhBBbGxkZWJyaWRfYXBpa2V5WgpyZWFsZGVicmlkKQRaEFJlYWxkZWJyaWRfdG9rZW5aGFJlYWxkZWJyaWRfcmVmcmVzaF90b2tlbloUUmVhbGRlYnJpZF9jbGllbnRfaWRaGFJlYWxkZWJyaWRfY2xpZW50X3NlY3JldFoKZGVicmlkbGlua1oXRGVicmlkTGlua19hY2Nlc3NfdG9rZW5aGERlYnJpZExpbmtfcmVmcmVzaF90b2tlbnJsAAAAWgl0cmFrdF9waW4pAdoFVHJha3Rp9AEAAFoLcmVzZXRfY2FjaGVyawAAAHoQQ2FjaGUgcmVpbmljaWFkYWnQBwAAWg1yZXNldF93YXRjaGVkej5zcGVjaWFsOi8vcHJvZmlsZS9hZGRvbl9kYXRhL3BsdWdpbi52aWRlby5wYWxhbnRpcjMvd2F0Y2hlZC5kYnoqUmVpbmljaWFuZG8gbGEgc2luY3Jvbml6YWNpb24gY29uIHRyYWt0LnR2cp4AAABUWglyZXN1bWFibGVaBWxpbWl0cmoAAABpxzIAAFoJUDNVcGRhdGVk2glzZWFyY2hZb3UpAXLDAAAAWglpbmZvRXh0cmEpAdoEVG1kYnKEAAAA2gFf2gFFen57Impzb25ycGMiOiAiMi4wIiwgIm1ldGhvZCI6ICJWaWRlb0xpYnJhcnkuR2V0VFZTaG93RGV0YWlscyIsICJwYXJhbXMiOiB7InR2c2hvd2lkIjogJXMsICJwcm9wZXJ0aWVzIjogWyJ1bmlxdWVpZCJdfSwgImlkIjogMX3aBnJlc3VsdFoNdHZzaG93ZGV0YWlsc1oIdW5pcXVlaWRyoAAAAFoFbW92aWVyqwAAANoBMCkBWgdzZWNvbmRzciQAAAApA1oGdHZzaG932gZzZWFzb27aB2VwaXNvZGVaAnR2Wgtjb250ZXh0TWVudXJuAAAAWglhZGRSYXRpbmdyJgAAACkBWgdmb3J6YWRv2g1saW1pdEl0ZW1MaXN02g1wZXJjZW50UGxheWVkZwAAAAAAAAAAegxyZXN1bWU6ZmFsc2V6NXNwZWNpYWw6Ly9ob21lL2FkZG9ucy9wbHVnaW4udmlkZW8ucGFsYW50aXIzL2ljb24ucG5nejdzcGVjaWFsOi8vaG9tZS9hZGRvbnMvcGx1Z2luLnZpZGVvLnBhbGFudGlyMy9mYW5hcnQuZ2lmegxza2luLmVzdHVhcnnaBWZpbGVzWgZhbGJ1bXN6VnNlbGVjdCBsYWJlbCxhY3Rpb24saWNvbixzcWwsZmFuYXJ0IGZyb20gbWVudXMgd2hlcmUgbWVudV9pZCA9IDEwIE9SREVSIGJ5IGl0ZW1faWQgYXNjKQRaBGljb25aBmZhbmFydHJeAAAAcnEAAAAplnJaAAAAcooAAAByKwAAAHIpAAAAcq0AAAByuAAAAHJ/AAAAcrUAAAByLQAAAHJ4AAAAcoUAAAByZAAAAHKJAAAAcncAAAByeQAAAHJ1AAAAcmUAAAByYwAAAHJ7AAAAcnQAAAByLwAAAHKDAAAAcn4AAAByYgAAAHKOAAAAWgl0aHJlYWRpbmdyAQAAANoIYnVpbHRpbnPaBmJhc2U2NNoFdHlwZXNyAgAAANoJaW1wb3J0bGlicgMAAAByBAAAAHI2AAAAcpkAAAByOgAAAHJAAAAA2gliODVkZWNvZGVaEGxpYnMuaW9vMDAwb29PT09yQgAAAFoNbGlicy5pb29PbzAwb3JDAAAAckQAAAByRQAAAHJGAAAAWhBsaWJzLmlvT28wMG9vb29vckcAAABySAAAAHJJAAAAckoAAABySwAAAHJMAAAAck0AAAByTgAAAHJPAAAAclAAAABaDGxpYnMuaW9pSTFpMXJRAAAAclIAAABaDmxpYnMuaW9paTFpMUlpclMAAABaDWxpYnMuaW9JSTFpSTFyVAAAAHJ8AAAAcl8AAAByXAAAAHJbAAAAcmcAAABylQAAAHK8AAAAcr0AAAByGQAAAHKCAAAAWgpJSWlJaUkxaUlJWgxvbzBPME8wT29vb29ygAAAAFoCb2vaBGV4aXRaBldpbmRvd1oLZ2V0UHJvcGVydHlyNQAAAHK0AAAAcioAAAByfQAAAFoHaWlpMWlpMVoFaUlpMWlaBG8wT29yugAAAFoKSWkxaUlJSTExaVoITzBvTzBPb29ywgAAAHKTAAAAcrkAAABaFWF1dGhlbnRpY2F0aW9uRGV2aWNlc3KEAAAAcoEAAAByjQAAAHKSAAAAci4AAABaB2lpSUkxaTFyIAAAAHJ2AAAAcoYAAAByhwAAAHKIAAAAcrYAAAByjwAAAHKRAAAAWgxsaWJzLmlvT29vbzBywwAAAFoNbGlicy5pb2lJMTExaXLEAAAAWg5jbGVhckluZm9FeHRyYVoIaTFpaWlJaWlytwAAAFoHT29vTzBPb1oKSTFpMTExSWlJMVoGT29Pb09vWgNPT29aDmV4ZWN1dGVKU09OUlBDWgtJSTFpSUkxSWlJaVoRZ2V0UHJvZ3Jlc3NNb3ZpZXNyWQAAAFoGaWlpMWkx2gVmbG9hdHJhAAAAcq4AAABaDGlJSTExSTExMTExSVoMZ2V0SW5mb0V4dHJhcjAAAABaC09vTzBvT09Pb29PWgRzaG93crsAAABylAAAAFoKT29vT29PMG8wMFoKYWRkUmF0aW5nc1oHZnJvbXVybFoGTzAwMG9PcssAAAByFAAAAHLMAAAAWgtwbGF5Q29udGV4dNoDcG9wWg9tYXJrQXNVbndhdGNoZWRyXgAAAHKgAAAAcskAAAByygAAAFoKZ2V0U2tpbkRpcnIMAAAAcgwAAAByDAAAAHINAAAA2gg8bW9kdWxlPgEAAABzygEAAAIBCAEIAQgBCAEIAQgBCAEIAQIBAgEIAQIBDAEQAQwBEAEEAQQBEgEGIQYBDAEYATABEAEMAQwBBgECAQgBCA8IbQhcCgQEAQQBAgEEAQIBAgEIARQBCAECARQBCAECAS4BAgEQAQIBHgEOAQIBCgEKAQoBCAEKAQoBCgEIAQIBCAEKAQYBCAEEAQoBCgEMAQIBBgEKAQgBCAEEAQoBCgEWAQgBBAEKAQIBCAEKAR7/BIAGAgIBBAECAQT/DgIKAQSABgEIAQQBAoAMAQYBBP8CAgoBBgEIAQIBCAECAQYBAgECAQIBFAEEAQYBCgECAQwBCAEGAQoBEAECAQwBBgEGARQBGAIIAQYBCgEMAQYBCAEGARABDAEKAQwBBAISAQwBDAECAQIBDAEIAQ4BGAEGAQgBBAEKAQgBFgEe/wYCHAEeAQKACgEGAQgCEAEIAQYBEAEMAQwBCAEGAR4BDAECARABFAEIAQIBAgECAQSAGgECARIBBgEIAQgBCgECAU4BAgECAQoBCAEIAQQBEAEQAQT9BAQe+wKAEAcMAQIBAgEGAQIBAgEKAQYBCgEKAgQBCv8CAQIBAgECARYBAgEG/AIGDAEAgQTI')))\'))")